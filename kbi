;*******************************************************************
;* This stationery serves as the framework for a user application. *
;* For a more comprehensive program that demonstrates the more     *
;* advanced functionality of this processor, please see the        *
;* demonstration applications, located in the examples             *
;* subdirectory of the "Freescale CodeWarrior for HC08" program    *
;* directory.                                                      *
;*******************************************************************

; Include derivative-specific definitions
            INCLUDE 'derivative.inc'
            

; export symbols
            XDEF _Startup, main,kbirutina
            ; we export both '_Startup' and 'main' as symbols. Either can
            ; be referenced in the linker .prm file or from C/C++ later on
            
            
            
            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


; variable/data section
MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition
estado:       ds.b   1

Javier:   SECTION



; ================= RUtina  de Interrupcion por KBI
kbirutina: 
           pshh
        bset	KBISC_KBACK,KBISC   ; Reconocimiento de int y forza la bandera a 0.
        bclr	KBISC_KBIE,KBISC
        bsr		delay
        bsr 	delay
        bsr 	delay
        bsr 	delay
holi:   brclr 3,PTBD,holi 
        
		lda #$01
		cmp	estado
		beq st11
		bne	st22
		
st11:	
		lda #$00
		sta	estado
		bra kbi_fin
		
st22:	
		lda #$01
		sta	estado
		bra kbi_fin

kbi_fin:
		 
		
		bset KBISC_KBIE,KBISC
		pulh
		rti
		
MyCode:     SECTION
main:
_Startup:
            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
            TXS
            
			lda   #$52
			sta   SOPT1 ; Desactivar watchdog y BKGD como PTA4
			lda   #%00000011
			sta   PTADD
			lda   #%11110000
			sta   PTBDD
			lda   #$FF
			sta   PTAPE
			lda	  #%00000001
			sta	  KBISC		;1 IE=0
			lda	  #$00
			sta	  KBIES		;2 
			lda   #$FF
			sta   PTBPE		;3
			;;;;;;;;;;;;;
			lda   #%10000000
			sta	  KBIPE		;4
			lda	  KBISC
			ora	  #%00000100
			sta	  KBISC		;5
			lda	  KBISC
			ora	  #%00000011
			sta	  KBISC		;6
			
			
			lda   #$00
			sta	  estado
			jsr   conf_IRQ  
			cli 
	
mainLoop:	
			lda #%01
			cmp estado
			beq fijo
			bsr delay
			bsr delay
			bsr delay
			bsr delay
			lda #$01
			sta	PTAD
			bsr delay
			bsr delay
			bsr delay
			bsr delay
			lda #$00
			sta	PTAD
			bra mainLoop
fijo:
			lda #$01
			sta PTAD
			bra mainLoop
            

delay: 	
			lda		#$ff
rt1:		psha
			lda		#$ff
rt2:		dbnza	rt2
			pula
			dbnza	rt1
			rts
