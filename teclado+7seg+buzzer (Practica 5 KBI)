;*******************************************************************
;* Universidad Nacional de Colombia                                *
;* Facultad de ingeniería mecánica y mecatrónica                   *
;* Microcontroladores 2018-I                                       *
;* Programador:                                                    *
;* -Sebastian Cepeda Espinosa                                      *
;* -Javier Mauricio Pinilla Garcia                    		   *
;* Version: 1.0                                                    *
;* Microcontrolador: MC9S08QG8CPBE                                 *
;* Codigo para usar 4 display 7 segmento con el fin de implementar *
;* un reloj y un calendario cuyo cambio esta dado por IRQ          *
;*******************************************************************

; Include derivative-specific definitions
            INCLUDE 'derivative.inc'
            

; export symbols
            XDEF _Startup, main, intirq, kbirutina,rutinaRTC
            ; we export both '_Startup' and 'main' as symbols. Either can
            ; be referenced in the linker .prm file or from C/C++ later on
            
            
            
            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


; variable/data section
MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition

estado:       ds.b   1
numero:		ds.b   1	; numero pulsado
fkbi:		ds.b   1	; flag kbi
rowa:		ds.b   1	; row actual
row:		ds.b   1	; row activada cuando se dio la interrupcion
col:		ds.b   1   ; col activada cuando se dio la interrupcion
numa:		ds.b   1
numb:		ds.b   1
numc:		ds.b   1
numd:		ds.b   1
nume:		ds.b   1
aux:		ds.b   1
escrito:    ds.b   1
tono:       ds.b   1


Retraso:  	 SECTION
; ================= RUtina  de Interrupcion por IRQ
intirq:	
		pshh
        bset  IRQSC_IRQACK,IRQSC   ; Reconocimiento de int y forza la bandera a 0.
        bclr	  IRQSC_IRQIE,IRQSC
        lda   #$01
        jsr   retardo
        lda   #$01
        jsr   retardo
        lda   #$01
        jsr   retardo
        lda   #$01
        jsr   retardo
        
irq_1:	brclr 5,PTAD,irq_1        
		lda #$01
		cmp	estado
		beq st1
		bne	st2
		
st1:	lda #$00
		sta	estado
		bra finirq
		
st2:	lda #$01
		sta	estado
		bra finirq
		
finirq: bset IRQSC_IRQIE,IRQSC
		pulh
		rti	

; =============== Rutina KBI ==========================		
kbirutina: 
        pshh
        bset	KBISC_KBACK,KBISC   ; Reconocimiento de int y forza la bandera a 0.
        bclr	KBISC_KBIE,KBISC
        lda		#$01
        bsr		retardo
        lda		#$01
        bsr		retardo
        lda		#$01
        bsr		retardo
        lda		#$01
        bsr		retardo
        lda		PTAD
        sta		col

loop1:  brset 0,PTAD,loop1 
        brset 1,PTAD,loop1	
        brset 2,PTAD,loop1
        
        lda rowa
        sta	row
		lda #$01
		cmp	fkbi
		beq st11
		bne	st22
		
st11:	
		lda #$00
		sta	fkbi
		bra kbi_fin
		
st22:	
		lda #$01
		sta	fkbi
		bra kbi_fin

kbi_fin:
		 
		
		bset KBISC_KBIE,KBISC
		pulh
		rti		
; =============== Rutina RTC ==========================
rutinaRTC:  pshh
            lda      SRTISC
            ora      #%01000000
            sta      SRTISC                    ; Borra la bandera de interrupcion
            
            ;rutina de interrupcion
            lda		nume
            sta		aux
            lda 	numd
			sta		nume
			lda 	numc
			sta		numd
			lda 	numb
			sta		numc
			lda 	numa
			sta		numb
			lda 	aux
			sta		numa
            
            pulh
            rti		
; =============== Main Program ==========================
ProgMain:  SECTION
main:
_Startup:
            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
            TXS
			; ========= Rutina configuracion de IRQ
            jsr   conf_IRQ  
			jsr   configRTC
			lda   #$52
			sta   SOPT1 ; Desactivar watchdog
			lda	  #$00
			sta	  fkbi
			sta	  row
			sta	  rowa
			lda   #$0A
            sta   numero
            lda   #$01
			sta   estado
			lda	  #$00
			sta	  numa
			lda	  #$00
			sta	  numb
			lda	  #$00
			sta	  numc
			lda	  #$00
			sta	  numd
			lda	  #$00
			sta	  nume
			lda	  #$00
			sta	  tono
			
			lda		#%11111000 ; Puertos de lectura, columnas
			;		  ||||||||_col 1
            ;		  |||||||__col 2
            ;         ||||||___col 3 
            sta		PTADD
            lda		#%00000111 ; pull up puertos de lectura
            ;		  ||||||||_col 1
            ;		  |||||||__col 2
            ;         ||||||___col 3
            ;sta		PTAPE
            lda	    #%11111111 ; Puertos de escritura
            ;		  ||||||||_row 1
            ;		  |||||||__row 2
            ;         ||||||___row 3
            ;		  |||||____row 4			
            sta		PTBDD
            jsr		kbi_conf		
			CLI			; enable interrup
			
mainLoop:	
			jsr   escritura
			lda   #$01
			cmp   fkbi
			beq   ver0
			
			lda	  estado
			cmp   #$01
			bne   rows
			jmp   mainLoop			
rows:
            NOP
            lda		PTBD
            and		#%11110000
            ora		#%00000100	;row 1 = 1
			sta		PTBD
			lda     #$01
			sta		rowa
			
			NOP
			lda		PTBD
            and		#%11110000
            ora		#%00000101	;row 2 = 1
			sta		PTBD
			lda     #$02
			sta		rowa
			
			NOP
			lda		PTBD
            and		#%11110000
            ora		#%00000110	;row 3 = 1
			sta		PTBD
			lda     #$03
			sta		rowa
			
			NOP
			lda		PTBD
            and		#%11110000
            ora		#%00000111	;row 4 = 1
			sta		PTBD
			lda     #$04
			sta		rowa

            BRA    mainLoop
            
ver0:
			lda		#$01
			cmp		row
			bne		ver1
			brset	0,col,num1	;col 1 = 1
			brset	1,col,num2	;col 2 = 1
			brset	2,col,num3	;col 3 = 1
			BRA     clrfkbi
			
ver1:		NOP
			lda		#$02
			cmp		row
			bne		ver2
			brset	0,col,num4	;col 1 = 1
			brset	1,col,num5	;col 2 = 1
			brset	2,col,num6	;col 3 = 1
			BRA    clrfkbi

ver2:		lda		#$03
			cmp		row
			bne		ver3
			brset	0,col,num7	;col 1 = 1
			brset	1,col,num8	;col 2 = 1
			brset	2,col,num9	;col 3 = 1
            BRA    clrfkbi
            
ver3:			
			brset	1,col,num0	;col 1 = 1
			BRA    clrfkbi

			
num1:		lda		#$01
			sta		numero
			bra 	clrfkbi
			
num2:		lda		#$02
			sta		numero
			bra 	clrfkbi
			
num3:		lda		#$03
			sta		numero
			jmp 	clrfkbi
			
num4:		lda		#$04
			sta		numero
			jmp 	clrfkbi
			
num5:		lda		#$05
			sta		numero
			jmp 	clrfkbi

num6:		lda		#$06
			sta		numero
			jmp 	clrfkbi
			
num7:		lda		#$07
			sta		numero
			jmp 	clrfkbi
			
num8:		lda		#$08
			sta		numero
			jmp 	clrfkbi
			
num9:		lda		#$09
			sta		numero
			jmp 	clrfkbi
			
num0:		lda		#$00
			sta		numero
			jmp 	clrfkbi

clrfkbi:	

			lda 	numd
			sta		nume
			lda 	numc
			sta		numd
			lda 	numb
			sta		numc
			lda 	numa
			sta		numb
			lda 	numero
			sta		numa
			lda		#$00
			sta		fkbi
			
			jsr		sonar			
			jmp 	mainLoop
;23456789012345678901234567890123456789012345
sonar:		
			lda	  numero
			cmp	  #$00
			beq	  s0
			cmp	  #$01
			beq	  s1
			cmp	  #$02
			beq	  s2
			cmp	  #$03
			beq	  s3
			cmp	  #$04
			beq	  s4
			cmp	  #$05
			beq	  s5
			cmp	  #$06
			beq	  s6
			cmp	  #$07
			beq	  s7
			cmp	  #$08
			beq	  s8
			cmp	  #$09
			beq	  s9
fsonar:		
			lda   #$ff
			sub   numero
t1:			psha
			lda	  tono
			jsr   retardo
			bset  3,PTAD
			lda   tono
			jsr   retardo
			bclr  3,PTAD
			pula
			dbnza	t1
			rts				
			
s0:			lda   #$0A			
			sta   tono
			jmp   fsonar
s1:			lda   #$01			
			sta   tono
			jmp   fsonar			
s2:			lda   #$02			
			sta   tono
			jmp   fsonar			
s3:			lda   #$03			
			sta   tono
			jmp   fsonar
s4:			lda   #$04			
			sta   tono
			jmp   fsonar			
s5:			lda   #$05			
			sta   tono
			jmp   fsonar			
s6:			lda   #$06			
			sta   tono
			jmp   fsonar
s7:			lda   #$07			
			sta   tono
			jmp   fsonar			
s8:			lda   #$08			
			sta   tono
			jmp   fsonar
s9:			lda   #$09			
			sta   tono
			jmp   fsonar			
												
escritura:	
			lda	  PTBD
			and	  #%11110000
			ora	  #%00000000
			sta	  PTBD
			lda	  numd
			sta   escrito
			jsr   escnum
			NOP
			lda	  #$0f
			jsr   retardo
			NOP
			lda	  PTBD
			and	  #%11110000
			ora	  #%00000001
			sta	  PTBD
			lda	  numc
			sta   escrito
			jsr   escnum
			NOP
			lda	  #$0f
			jsr   retardo
			NOP
			lda	  PTBD
			and	  #%11110000
			ora	  #%00000010
			sta	  PTBD
			lda	  numb
			sta   escrito
			jsr   escnum
			NOP
			lda	  #$0f
			jsr   retardo
			NOP
			lda	  PTBD
			and	  #%11110000
			ora	  #%00000011
			sta	  PTBD
			lda	  numa
			sta	  escrito
			jsr   escnum
			NOP
			lda	  #$0f
			jsr   retardo
			NOP
			rts
			
escnum:		cmp	  #$00
			beq   esc0
n1:			cmp	  #$01
			beq   esc1
n2:			cmp	  #$02
			beq   esc2
n3:			cmp	  #$03
			beq   esc3
n4:			cmp	  #$04
			beq   esc4
n5:			cmp	  #$05
			beq   esc5
n6:			cmp	  #$06
			beq   esc6
n7:			cmp	  #$07
			beq   esc7
n8:			cmp	  #$08
			beq   esc8
n9:			cmp	  #$09
			beq   esc9
nf:			rts	

;23456789012345678901234567890123456789012345
esc0:       lda   PTBD 			;Escribir 8b0000xxxx
			and   #%00001111
			sta	  PTBD
			lda   escrito	
			jmp   n1
				
esc1: 		lda   PTBD 			;Escribir 8b0001xxxx
			and   #%00001111
			ora   #%00010000
			sta	  PTBD	
			lda   escrito
			jmp   n2
			
esc2:		lda   PTBD 			;Escribir 8b0010xxxx
			and   #%00001111
			ora   #%00100000
			sta	  PTBD	
			lda   escrito
			jmp   n3
 
esc3:		lda   PTBD 			;Escribir 8b0011xxxx
			and   #%00001111
			ora   #%00110000
			sta	  PTBD	
			lda   escrito
			jmp   n4
			
esc4:		lda   PTBD 			;Escribir 8b0100xxxx
			and   #%00001111
			ora   #%01000000
			sta	  PTBD	
			lda   escrito
			jmp   n5
 
esc5:		lda   PTBD 			;Escribir 8b0101xxxx
			and   #%00001111
			ora   #%01010000
			sta	  PTBD	
			lda   escrito
			jmp   n6
 
esc6:		lda   PTBD 			;Escribir 8b0110xxxx
			and   #%00001111
			ora   #%01100000
			sta	  PTBD	
			lda   escrito
			jmp   n7
 
esc7:		lda   PTBD 			;Escribir 8b0111xxxx
			and   #%00001111
			ora   #%01110000
			sta	  PTBD	
			lda   escrito
			jmp   n8
 
esc8: 		lda   PTBD 			;Escribir 8b1000xxxx
			and   #%00001111
			ora   #%10000000
			sta	  PTBD	
			lda   escrito
			jmp   n9
			
esc9: 		lda   PTBD 			;Escribir 8b1000xxxx
			and   #%00001111
			ora   #%10010000
			sta	  PTBD
			lda   escrito	
			jmp   nf
;Subrutina de configuración de interupción por tiempo
configRTC:  bclr     5, SRTISC     ; Habilita el reloj de referencia interno RTICLKS (32.768 kHz por defecto - revisar hoja de datos del uC seleccionado)
            lda      #%01010111
;                        ||  |            
;                        ||  +----------------- interrupcion cada segundo 
;                        |+-------------------- Interrupcion temporizada cada 1 segundo habilitada
;                        |+-------------------- IRCLK seleccionado como fuente de reloj del modulo RTC
            sta      SRTISC
            rts

;Subrutina de configuraciÛn del Modulo IRQ
conf_IRQ:     ; Label de la Interrupción
              ; 76543210 Bits
        lda   #%01010011
              ; ||||||||
              ; |||||||+--------- IRQMODE  = Flanco de Bajada
              ; ||||||+---------- IRQIE = IRQ habilitada
              ; |||||+----------- IRQACK = Para reconocimiento
              ; ||||+------------ IRQF  = Solo lectura
              ; |||+------------- IRQPE = Pin Habilitado disponible .
              ; ||+-------------- No Disponible
              ; |+--------------- IRQPDD =
              ; +---------------- NO disponible
         sta   IRQSC  ; Configura la Interrupción     
         rts     ;Retorno de subrutina de IRQ
 
 
 
 
 ;***********************************************************************************;
 ;			                 Configuracion del KBI                                   ;   
 ;                                                                                   ;
 ; KBISC_MOD= 1b1 --> detecta flanco y nivel                                         ;
 ;                                                                                   ;
 ; PTAPE = #%00000111 --> activa dispositivo de pull up en pines KBI a usar          ;
 ;                                                                                   ;
 ; KBIES = FF --> selecciona resistencia de pull down, la interrupcion               ;
 ;                se activa con un 1 en el pin                                       ;
 ;                                                                                   ;
 ;***********************************************************************************;           
kbi_conf:
			lda	  #%00000001
			sta	  KBISC		;1 IE=0, MOD=1
			lda	  #$FF
			sta	  KBIES		;2 Seleccionar pull up/down 0/1 activa con 0/activa con 1
			
			lda   #%00000111
			sta   PTAPE		;3 Configurar pullup de los pines ausar
			lda   #%00000111
			sta	  KBIPE		;4 PTB3 como KBI, configurar pin KBI a usar
			lda	  KBISC
			ora	  #%00000100
			sta	  KBISC		;5 ACK=1
			lda	  KBISC
			ora	  #%00000011
			sta	  KBISC		;6 IE=1, MOD=1
			rts

retardo: 	
rt1:		psha
			lda		#$ff
rt2:		
			dbnza	rt2
			pula
			dbnza	rt1
			rts
			
