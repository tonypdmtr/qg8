;*******************************************************************
;* This stationery serves as the framework for a user application. *
;* For a more comprehensive program that demonstrates the more     *
;* advanced functionality of this processor, please see the        *
;* demonstration applications, located in the examples             *
;* subdirectory of the "Freescale CodeWarrior for HC08" program    *
;* directory.                                                      *
;*******************************************************************

; Include derivative-specific definitions
            INCLUDE 'derivative.inc'
            

; export symbols
            XDEF _Startup, main
            ; we export both '_Startup' and 'main' as symbols. Either can
            ; be referenced in the linker .prm file or from C/C++ later on
            
            
            
            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


; variable/data section
MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition
numero:		ds.b   1

; code section
MyCode:     SECTION
main:
_Startup:    ;0->in  1->out
            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
            TXS
            lda		#$52
            sta		SOPT1
            lda		#$00
            sta		PTADD
            lda		#$FF
            sta		PTAPE
            lda		#%11110000
            sta		PTBPE
            lda	    #%00001111
            ;		  ||||||||_fila 1
            ;		  |||||||__fila 2
            ;         ||||||___fila 3
            ;		  |||||____fila 4
            ;		  ||||_____columna1
            ;		  |||______columna2	
            ;		  ||_______columna3
            ;		  |________columna4 sin usar			
            sta		PTBDD
            lda		#%11110000
            sta		PTBPE
            lda		#$0A
            sta  	numero
            
			CLI			; enable interrupts

mainLoop:
            ; Insert your code here
            NOP
			lda		#%00000001	;row 1 = 1
			sta		PTBD
			brset	0,PTAD,num1	;col 1 = 1
			brset	1,PTAD,num2	;col 2 = 1
			brset	2,PTAD,num3	;col 3 = 1
			
			NOP
			lda		#%00000010	;row 2 = 1
			sta		PTBD
			brset	0,PTAD,num4	;col 1 = 1
			brset	1,PTAD,num5	;col 2 = 1
			brset	2,PTAD,num6	;col 3 = 1
			
			NOP
			lda		#%00000100	;row 3 = 1
			sta		PTBD
			brset	0,PTAD,num7	;col 1 = 1
			brset	1,PTAD,num8	;col 2 = 1
			brset	2,PTAD,num9	;col 3 = 1
			
			NOP
			lda		#%00001000	;row 4 = 1
			sta		PTBD
			brset	0,PTAD,num0	;col 1 = 1
			
			
			
            BRA    mainLoop
			
num1:		lda		#$01
			sta		numero
			bra 	mainLoop
			
num2:		lda		#$02
			sta		numero
			bra 	mainLoop
			
num3:		lda		#$03
			sta		numero
			bra 	mainLoop
			
num4:		lda		#$04
			sta		numero
			bra 	mainLoop
			
num5:		lda		#$05
			sta		numero
			bra 	mainLoop

num6:		lda		#$06
			sta		numero
			bra 	mainLoop
			
num7:		lda		#$07
			sta		numero
			bra 	mainLoop
			
num8:		lda		#$08
			sta		numero
			bra 	mainLoop
			
num9:		lda		#$09
			sta		numero
			bra 	mainLoop
			
num0:		lda		#$00
			sta		numero
			bra 	mainLoop
			
			
			
			
            
			
            


