;*******************************************************************
;* Universidad Nacional de Colombia                                *
;* Facultad de ingeniería mecánica y mecatrónica                   *
;* Microcontroladores 2018-I                                       *
;* Programador:                                                    *
;* -Sebastian Cepeda Espinosa	    25481375                         *
;* -Javier Mauricio Pinilla Garcia  25481244                       *
;* Version: 1.0                                                    *
;* Microcontrolador: MC9S08QG8CPBE                                 *
;* Riutina Fecha-Hora 7-Segmentos, laboratorio No 4                *
;*                                                                 *
;*******************************************************************

; Include derivative-specific definitions
            INCLUDE 'derivative.inc'
            

; export symbols
            XDEF _Startup, main
            ; we export both '_Startup' and 'main' as symbols. Either can
            ; be referenced in the linker .prm file or from C/C++ later on
            
            
            
            XREF __SEG_END_SSTACK   ; symbol defined by the linker for the end of the stack


; variable/data section
MY_ZEROPAGE: SECTION  SHORT         ; Insert here your data definition
estado:       ds.b   1
minh:		  ds.b   1
minl:		  ds.b   1
horah:		  ds.b   1
horal:		  ds.b   1
diah:		  ds.b   1
dial:		  ds.b   1
mesh:		  ds.b   1
mesl:		  ds.b   1
; code section
MyCode:     SECTION
main:
_Startup:
            LDHX   #__SEG_END_SSTACK ; initialize the stack pointer
            TXS
			CLI			; enable interrupts

initIRQ:	pshh
			lda #$01
			eor	estado
			sta	estado
			jsr finIRQ
			
finIRQ:		bset 2,IRQSC
			pulh
			rti	
			
			
			

mainLoop:
            ; Insert your code here
			bra init
r1:			
			jsr	  escritura
			jsr	  retardo
		
			bra	  r1
            
            
init:
			lda   #$52
			sta   SOPT1 ; Desactivar watchdog y BKGD como PTA4
			lda   #%00010111
			sta	  IRQSC
			lda   #%00000001
			sta	  KBISC
			lda   #%00000000
			sta   KBIES
			lda   #%00011111
			sta   PTADD
			lda   #%11110000
			sta   PTBDD
			lda   #%00100000
			sta   PTAPE
			lda   #%00001111
			sta   PTBPE
			lda   #%11110000;
			sta   KBIPE
			lda   #%00000101
			sta   KBISC
			lda   #%00000011
			sta   KBISC
			lda	  #%11111101
			and   KBISC
			ora   #%00000010
			sta	  KBISC
			cli 
			
			lda	  #$00
			sta   estado
			lda	  #$00
			sta   minh
			lda	  #$00
			sta   minl
			lda   #$00
			sta   horah
			lda	  #$09
			sta   horal
			lda	  #$01
			sta   diah
			lda	  #$04
			sta   dial
			lda	  #$00
			sta   mesh
			lda	  #$03
			sta   mesl
			bra	  r1
			
retardo: 	
			lda		#$01
rt1:		psha
			lda		#$ff
rt2:		dbnza	rt2
			pula
			dbnza	rt1
			rts

;23456789012345678901234567890123456789012345
escritura:  lda   #$01
			cmp   estado
			beq	  wfecha
			bne	  whora
			
escfin:		rts
	  
wfecha:		lda	  #%00000001
			sta	  PTAD
			lda	  mesh
			jsr   escnum
			jsr   retardo
			lda	  #%00000010
			sta	  PTAD
			lda	  mesl
			jsr   escnum
			jsr   retardo
			lda	  #%00000100
			sta	  PTAD
			lda	  diah
			jsr   escnum
			jsr   retardo
			lda	  #%00001000
			sta	  PTAD
			lda	  dial
			jsr   escnum
			jsr   retardo
			bra   escfin
			
whora:		lda	  #%00000001
			sta	  PTAD
			lda	  horah
			jsr   escnum
			jsr   retardo
			lda	  #%00000010
			sta	  PTAD
			lda	  horal
			jsr   escnum
			jsr   retardo
			lda	  #%00000100
			sta	  PTAD
			lda	  minh
			jsr   escnum
			jsr   retardo
			lda	  #%00001000
			sta	  PTAD
			lda	  minl
			jsr   escnum
			jsr   retardo
			bra   escfin	

escnum:		cmp	  #$00
			beq   esc0
n1:			cmp	  #$01
			beq   esc1
n2:			cmp	  #$02
			beq   esc2
n3:			cmp	  #$03
			beq   esc3
n4:			cmp	  #$04
			beq   esc4
n5:			cmp	  #$05
			beq   esc5
n6:			cmp	  #$06
			beq   esc6
n7:			cmp	  #$07
			beq   esc7
n8:			cmp	  #$08
			beq   esc8
n9:			cmp	  #$09
			beq   esc9
nf:			rts	
		
;23456789012345678901234567890123456789012345
esc0:       lda   PTBD 			;Escribir 8b0000xxxx
			and   #%00001111
			sta	  PTBD	
			bra n1
				
esc1: 		lda   PTBD 			;Escribir 8b0001xxxx
			and   #%00001111
			ora   #%00010000
			sta	  PTBD	
			bra n2
			
esc2:		lda   PTBD 			;Escribir 8b0010xxxx
			and   #%00001111
			ora   #%00100000
			sta	  PTBD	
			bra n3
 
esc3:		lda   PTBD 			;Escribir 8b0011xxxx
			and   #%00001111
			ora   #%00110000
			sta	  PTBD	
			bra n4
			
esc4:		lda   PTBD 			;Escribir 8b0100xxxx
			and   #%00001111
			ora   #%01000000
			sta	  PTBD	
			bra n5
 
esc5:		lda   PTBD 			;Escribir 8b0101xxxx
			and   #%00001111
			ora   #%01010000
			sta	  PTBD	
			bra n6
 
esc6:		lda   PTBD 			;Escribir 8b0110xxxx
			and   #%00001111
			ora   #%01100000
			sta	  PTBD	
			bra n7
 
esc7:		lda   PTBD 			;Escribir 8b0111xxxx
			and   #%00001111
			ora   #%01110000
			sta	  PTBD	
			bra n8
 
esc8: 		lda   PTBD 			;Escribir 8b1000xxxx
			and   #%00001111
			ora   #%10000000
			sta	  PTBD	
			bra n9
	
esc9: 		lda   PTBD 			;Escribir 8b1000xxxx
			and   #%00001111
			ora   #%10010000
			sta	  PTBD	
			bra nf

incDia0: 	lda		#9T			;Carga 9 al acumulador			
			cmp		dial		;compara con dia low
			beq		incDia1		;si dia low es 9 va a incDia1
			lda		dial		;carga dial al acumulador
			add		#$1			;suma 1 al acumulador
			sta		dial		;lo asigna a dial
			jsr		mainLoop	;vuelve al main
			
incDia1:	lda		$#0			;carga 0 al acumulador
			sta		dial		;lo asigna a dial 
			lda		#3T			;carga 3 al acumulador
			cmp		diah		;compara con diah	
			beq		incDia2		;si es igual va a incDia2
			lda		diah		;carga diah al acumulador
			add		#$1			;suma 1 al acumulador
			sta		diah		;lo asigna a diah
			jsr 	mainLoop	;vuelve al main
				
incDia2:	lda		#$0			;carga 0 al acumulador
			sta		diah		;lo asigna a diah
			jsr		incMes0		;salta a incMes0
			
incMes0:	lda		#9T
			cmp		mesl		
			beq		incMes1		
			lda		mesl
			add		#$1
			sta		mesl
			jsr		mainLoop
			
incMes1:	lda		$#0
			sta		mesl
			lda		#1T
			beq		incMes2
			lda		mesh
			add		#$1
			sta		mesh
			jsr 	mainLoop
			
incMes2:	lda		#2T
			cmp		mesl
			blo		incMes3:
			lda		#$0
			sta		mesl
			sta		meh
			jsr		mainLoop
			
incMes3:	lda		mesl
			add		#$1
			sta		mesl
			jsr		mainLoop
			
			
			
			
